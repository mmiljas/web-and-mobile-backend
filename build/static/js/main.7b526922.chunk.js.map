{"version":3,"sources":["components/ContactList.js","services/contacts.js","App.js","index.js"],"names":["ContactList","name","number","delButton","baseUrl","request","axios","get","nonExisting","then","response","data","concat","newObject","post","App","useState","id","contacts","setContacts","newName","setNewName","newNumber","setNewNumber","contactsToShow","useEffect","contactService","initialContacts","className","onSubmit","event","preventDefault","contact","length","filter","item","window","alert","returnedContact","value","onChange","e","target","type","map","key","ReactDOM","render","document","getElementById"],"mappings":"0QAgBeA,G,MAdK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACpC,OACC,6BACC,+BACC,4BACC,4BAAKF,GACL,4BAAKC,GACL,4BAAKC,Q,gBCRJC,EAAU,oCAmBD,EAjBA,WACd,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,GAEpB,OAAOH,EAAQI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAOJ,OAavC,EAVA,SAAAK,GAEd,OADgBP,IAAMQ,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCmE3BI,EA1EH,WAAO,IAAD,EACiBC,mBAAS,CAC1C,CAAEf,KAAM,cACPC,OAAQ,WACRe,GAAI,KAJW,mBACTC,EADS,KACCC,EADD,OAOeH,mBAAS,IAPxB,mBAOTI,EAPS,KAOAC,EAPA,OAQmBL,mBAAS,IAR5B,mBAQTM,EARS,KAQEC,EARF,KAUXC,EAAiBN,EAEvBO,qBAAU,WACTC,IAEEjB,MAAK,SAAAkB,GACLR,EAAYQ,QAGf,IAkCA,OACC,yBAAKC,UAAU,OACd,yCACA,gDACA,0BAAMC,SAnCW,SAACC,GACnBA,EAAMC,iBACN,IAAMC,EAAU,CACf/B,KAAMmB,EACNlB,OAAQoB,EACRL,GAAIC,EAASe,OAAS,GAEpBf,EAASgB,QAAO,SAAAC,GAAI,OAAIf,IAAUe,EAAKlC,QAAMgC,OAAO,EACtDG,OAAOC,MAAM,gCAGbX,EACSM,GACPvB,MAAK,SAAA6B,GACLnB,EAAYD,EAASN,OAAO0B,SAsB7B,sCACY,2BAAOC,MAAOnB,EAASoB,SAAU,SAAAC,GAAC,OAAIpB,EAAWoB,EAAEC,OAAOH,WAEtE,wCACc,2BAAOA,MAAOjB,EAAWkB,SAAU,SAAAC,GAAC,OAAIlB,EAAakB,EAAEC,OAAOH,WAE5E,6BACC,4BAAQI,KAAK,UAAb,SAGF,uCAnBiBnB,EAAeoB,KAAI,SAAA1B,GAAQ,OAC7C,kBAAC,EAAD,CAAa2B,IAAK3B,EAASD,GAAIhB,KAAMiB,EAASjB,KAAMC,OAAQgB,EAAShB,OAAQC,UAAW,iDClD1F2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7b526922.chunk.js","sourcesContent":["import React from \"react\"\n\nconst ContactList = ({ name, number, delButton }) => {\n\treturn (\n\t\t<div>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t<td>{number}</td>\n\t\t\t\t\t<td>{delButton}</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t)\n}\n\nexport default ContactList","import axios from \"axios\"\nconst baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\tconst nonExisting = {\n\t}\n\treturn request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n\tconst request = axios.post(baseUrl, newObject)\n\treturn request.then(response => response.data)\n}\n\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nexport default { getAll, create, remove }","import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\nimport ContactList from \"./components/ContactList.js\"\nimport contactService from \"./services/contacts\"\n\nconst App = () => {\n\tconst [ contacts, setContacts ] = useState([\n\t\t{ name: \"Arto Hellas\",\n\t\t\tnumber: \"04066666\",\n\t\t\tid: 0\n\t\t} \n\t]) \n\tconst [ newName, setNewName ] = useState(\"\")\n\tconst [ newNumber, setNewNumber ] = useState(\"\")\n\n\tconst contactsToShow = contacts\n\n\tuseEffect(() => {\n\t\tcontactService\n\t\t\t.getAll()\n\t\t\t.then(initialContacts => {\n\t\t\t\tsetContacts(initialContacts)\n\t\t\t})\n\t},\n\t[])\n\n  \n\tconst addContact = (event) => {\n\t\tevent.preventDefault()\n\t\tconst contact = {\n\t\t\tname: newName,\n\t\t\tnumber: newNumber,\n\t\t\tid: contacts.length + 1\n\t\t}\n\t\tif(contacts.filter(item => newName===item.name).length>0){\n\t\t\twindow.alert(\"This contact already exists!\")\n\t\t}\n\t\telse {\n\t\t\tcontactService\n\t\t\t\t.create(contact)\n\t\t\t\t.then(returnedContact => {\n\t\t\t\t\tsetContacts(contacts.concat(returnedContact))\n\t\t\t\t})\n\t\t}\n\n\t}\n\n\t//const removeContact = (event) => {\n\t//\tevent.preventDefault()\n\t//\tconst contactId = 3\n\t//\tcontactService\n\t//\t\t.remove(contactId)\n\t//}\n\n\tconst rows = () => contactsToShow.map(contacts => \n\t\t<ContactList key={contacts.id} name={contacts.name} number={contacts.number} delButton={<button>remove</button>}/>\n\t)\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Phonebook</h1>\n\t\t\t<h2>Add new contact:</h2>\n\t\t\t<form onSubmit={addContact}>\n\t\t\t\t<div>\n          name: <input value={newName} onChange={e => setNewName(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n          number: <input value={newNumber} onChange={e => setNewNumber(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<h2>Numbers</h2>\n\t\t\t{rows()}\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}